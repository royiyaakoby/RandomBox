{"version":3,"sources":["components/GameButton/GameButton.module.css","containers/MainScreen/MainScreen.module.css","containers/HigeScoreList/HighScoreList.module.css","containers/ButtonsHolder/ButtonsHolder.module.css","components/UI/Button/Button.module.css","containers/RegisterHolder/RegisterHolder.module.css","components/UI/Input/Input.module.css","components/UserScoreOut/UserScoreOut.module.css","components/GameButton/GameButton.js","components/UI/Button/Button.js","containers/ButtonsHolder/ButtonsHolder.js","components/UI/Input/Input.js","containers/RegisterHolder/RegisterHolder.js","containers/MainScreen/MainScreen.js","hooks/GetScore/useGetScore.js","components/UserScoreOut/UserScoreOut.js","containers/HigeScoreList/HighScoreList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","GameButton","props","winningStyle","Styles","Button","iswinning","push","win","lose","dis","Dis","join","className","disabled","onClick","butonCliked","ButtonText","undefined","activeStyle","DisButton","click","name","ButtonsHolder","useState","winningButton","Math","floor","random","counter","highScore","score","buttonState","setButtonState","ranomnum","randerNewButton","winstate","scoreState","buttons","i","winning","randerNewbutton","setTimeout","Title","getInfo","Input","maxlength","maxLength","InputText","onChange","type","value","val","textholder","RegisterHolder","userName","nameState","setNameState","filerUserName","Filter","isProfane","length","event","newVal","target","changeNameHandler","OkButton","MainScreen","Style","username","useGetScore","exportState","setExportState","scoreList","setScoreList","secret","process","getScoreList","useCallback","fetch","then","res","json","data","newArrey","Object","entries","newArrey2","map","vel","sort","a","b","catch","err","console","log","useEffect","UserScoreOut","date","HighScoreList","listOfScore","TitleHighScore","activeList","Score","Buttton","App","startGame","currentScreen","gmaeState","setGameState","saveHighScoreHandler","Date","fulldate","getDay","getMonth","getFullYear","getHours","getMinutes","getSeconds","scoreToSave","method","body","JSON","stringify","headers","load","info","getinfoHandler","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9347bff6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameButton\":\"GameButton_GameButton__2xUmx\",\"Button\":\"GameButton_Button__1Y_IC\",\"Dis\":\"GameButton_Dis__1KmwJ\",\"lose\":\"GameButton_lose__2cK-d\",\"win\":\"GameButton_win__IHqoP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainScreen\":\"MainScreen_MainScreen__2-Ebm\",\"Button\":\"MainScreen_Button__16B4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HighScoreList\":\"HighScoreList_HighScoreList__2J0vN\",\"TitleHighScore\":\"HighScoreList_TitleHighScore__3HiqS\",\"activeList\":\"HighScoreList_activeList__2i9LE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonsHolder\":\"ButtonsHolder_ButtonsHolder__3LmiQ\",\"Title\":\"ButtonsHolder_Title__1urU3\",\"ScoreText\":\"ButtonsHolder_ScoreText__LOgF_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"DisButton\":\"Button_DisButton__2w2AL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterHolder\":\"RegisterHolder_RegisterHolder__1gKRc\",\"OkButton\":\"RegisterHolder_OkButton__1GTtw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputText\":\"Input_InputText__Qap3n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserScoreOut\":\"UserScoreOut_UserScoreOut__3DDSR\",\"fadein\":\"UserScoreOut_fadein__3QtlR\"};","import React from 'react';\nimport Styles from './GameButton.module.css'\n\nconst GameButton = (props)=> {\n\n\n    let winningStyle = [Styles.Button]\n    \n    props.iswinning ? winningStyle.push(Styles.win) : winningStyle.push(Styles.lose)\n    props.dis? winningStyle.push(Styles.Dis) : winningStyle.push()\n    \n    \n\n    winningStyle = winningStyle.join(' ') \n\n    let dis = props.dis\n  \n\n    return (\n        <div className={Styles.GameButton}>\n           <button className={winningStyle} disabled={dis}  onClick={props.butonCliked}> {props.ButtonText}   </button>\n        </div>\n    )\n}\n\nexport default GameButton;","import React from 'react';\nimport Styles from './Button.module.css'\n\nconst Button = (props) => {\n\n\n\n let dis = props.dis ===  false ||props.dis === undefined ? false : true\n let activeStyle = props.dis ===  false || props.dis === undefined ? Styles.Button : Styles.DisButton\n \n    return (\n        <div>\n            <button disabled={dis} className={activeStyle}  onClick={props.click} >{props.name}</button>\n        </div>\n    )\n}\n\nexport default Button","import React, {useState} from 'react';\nimport Styles from './ButtonsHolder.module.css'\n\nimport GameButton from '../../components/GameButton/GameButton'\nimport Button from '../../components/UI/Button/Button'\n\nconst ButtonsHolder = (props)=> {\n\n    const [buttonState, setButtonState] = useState({\n        winningButton : Math.floor((Math.random()*4)+1),\n        counter : 0,\n        disabled : false,\n        highScore : props.score\n    })\n\n\n    let ranomnum = Math.random()\n \n\n    const buttonHandler = (win)=>{\n        setButtonState({...buttonState, disabled: true})\n        setTimeout(()=>{\n            randerNewButton(win)  \n         },1000)\n\n    }\n\n\n    const randerNewButton =(winstate) =>{\n\n        let scoreState = winstate? buttonState.counter+1 : 0\n        let highScore =  scoreState <= buttonState.highScore?  buttonState.highScore : scoreState\nsetButtonState({winningButton :Math.floor((Math.random()*4)+1),\ncounter : scoreState,\ndisabled: false,\nhighScore: highScore})\n\n    }\n\n    let buttons = []\n    for (let i=1 ; i<=4 ; i++ ) {\n   let winning = (i === buttonState.winningButton) ? true : false\n        \n        buttons.push(<GameButton\n             key={i+'KeyNume' + ranomnum} \n             dis={buttonState.disabled}\n             iswinning={winning} \n             ButtonText={i} \n             randerNewbutton={()=>randerNewButton(winning)} \n             butonCliked={()=>buttonHandler(winning)}/>)\n    }\n\n    return (\n        \n        <div className={Styles.ButtonsHolder}>\n           <h1 className={Styles.Title}> Your Score: <spam>{ buttonState.counter}</spam></h1>\n{buttons}\n<Button name={'Save High Score: ' + buttonState.highScore} click={()=>props.getInfo(buttonState.highScore)} />\n        </div>\n    )\n}\n\nexport default ButtonsHolder;","import React from 'react';\nimport Styles from './Input.module.css'\n\nconst Input = (props)=> {\n\n    return (\n        <div> \n            <input maxlength={props.maxLength} className={Styles.InputText} onChange={props.onChange} type='text' value={props.val} textholder=\"\" />\n        </div>\n    )\n}\n\nexport default Input;","import React, {useState} from 'react'\nimport Styles from './RegisterHolder.module.css';\nimport Filter from 'bad-words';\n\nimport Input from '../../components/UI/Input/Input'\nimport Button from '../../components/UI/Button/Button'\n\nconst RegisterHolder = (props)=>{\n\n    const [nameState, setNameState] = useState({\n        userName : props.name\n    })\n\nlet filter = new Filter()\n\n// console.log(filter.isProfane(nameState.userName)); \n\nlet filerUserName = filter.isProfane(nameState.userName)\n\n\n\n let changeNameHandler =(event)=>{\nlet newVal =  event.target.value\nsetNameState({userName : newVal})\n };\n\n let dis = nameState.userName.length > 2 & !filerUserName? false : true\n\n    return (\n        <div className={Styles.RegisterHolder}>\n            <h1>Enter Your Name:</h1>\n            <Input onChange={(event)=>changeNameHandler(event)} val={nameState.userName} maxLength={5}/>\n            \n            <Button dis={dis} className={Styles.OkButton} click={()=>props.getInfo(nameState.userName)} name={'Go!'}/>\n            <h1>{nameState.userName}</h1>\n        </div>\n    )\n}\n\nexport default RegisterHolder;","import React from 'react';\nimport Style from './MainScreen.module.css'\n\nimport Button from '../../components/UI/Button/Button'\n\nconst MainScreen = (props)=>{\n    return(\n        <div className={Style.MainScreen}>\n            <h1>Hello  {props.username}</h1>\n            <h2>Your High Score Is:  {props.score}</h2>\n<Button className={Style.Button} click={()=>props.getInfo('ButtonHolder')}name={\"Start\"}/>\n<Button className={Style.Button} click={()=>props.getInfo('RegisterHolder')} name={'Name Edit'}/>\n<Button className={Style.Button} click={()=>props.getInfo('HighScoreList')}name={\"Score Board\"}/>\n        </div>\n    )\n}\n\nexport default MainScreen","import {useState, useEffect,useCallback} from 'react';\n\nconst useGetScore =()=>{\n\n    const [exportState, setExportState] = useState(false)\n    const [scoreList, setScoreList] = useState()\nlet secret =process.env.REACT_APP_SECRET\n;\n    const getScoreList = useCallback( ()=>{\n        fetch('https://myrandombox-6a49f-default-rtdb.europe-west1.firebasedatabase.app/highScoreList.json?auth='+secret)\n        .then(res=>res.json())\n        .then((data) =>{\n            // console.log(data);\n            let newArrey = Object.entries(data)\n            let newArrey2 =[]\n            // console.log(newArrey)\n            newArrey.map(vel=>newArrey2.push(vel[1]))\n            newArrey2.sort((a,b) => { \n                return a.score > b.score? -1: 1})\n\n                // console.log(newArrey2 );\n            setScoreList(newArrey2)\n            setExportState(true)\n        } )\n        .catch(err=> console.log(err))\n    },[secret])\n\n    useEffect(()=>{\n        getScoreList()\n    },[getScoreList])\n\n   \n\nif (exportState){\n    return scoreList\n}\n    \n\n}\n\nexport default useGetScore;","import React from 'react';\nimport Style from './UserScoreOut.module.css'\n\nconst  UserScoreOut = (props)=> {\n\n    return (\n        <div className={Style.UserScoreOut}>\n<p>{`${props.name} : ${props.score} points, ${props.date}`}</p>\n        </div>\n    )\n}\n\nexport default UserScoreOut;\n\n","import React, {useState, useEffect} from 'react';\nimport useGetScore from '../../hooks/GetScore/useGetScore'\nimport UserScoreOut from '../../components/UserScoreOut/UserScoreOut'\n\n\nimport Styles from './HighScoreList.module.css'\n\nimport Button from '../../components/UI/Button/Button'\n\nconst HighScoreList = (props) => {\n\n    const [scoreList, setScoreList] = useState(false)\n\n  \n\n\nlet listOfScore = useGetScore()\n useEffect(() => {\n    setScoreList(listOfScore) \n }, [listOfScore])\n\n  \n    return (\n        <div className={Styles.HighScoreList} >\n           \n            <h1 className={Styles.TitleHighScore}>Global Scores:</h1>\n           \n           \n           <div className={Styles.activeList}>\n\n           {scoreList? scoreList.map(val=>{\n                return(\n                    <UserScoreOut \n                    key={val.date+val.name+val.Score}\n                    name={val.name}\n                    date={val.date}\n                    score={val.score}\n                    />\n                )\n            }):null}\n           </div>\n         \n           <Button className={Styles.Buttton} name={'Back'} click={props.getInfo}/>\n        </div>\n    )\n} ;\n\n\nexport default HighScoreList;","import React, {useEffect, useState, useCallback} from 'react'\nimport './App.css';\nimport ButtonsHolderName from './containers/ButtonsHolder/ButtonsHolder';\nimport RegisterHolder from './containers/RegisterHolder/RegisterHolder'\nimport MainScreen from './containers/MainScreen/MainScreen'\nimport HighScoreList from './containers/HigeScoreList/HighScoreList'\n\nconst App =()=> {\n\n\n\n  const [gmaeState, setGameState] = useState({\n    name : '',\n    startGame : false,\n    currentScreen : 'RegisterHolder',\n    highScore : 0\n  })\n\n   \n\n  const getinfoHandler = (info)=> {\n    \nsetGameState({\n  name: info,\n  startGame: true,\n  currentScreen : 'MainScreen',\n  highScore : gmaeState.highScore\n})\n  }\n\n  const MainScreenClickedHandler = (info)=> {\n   \nsetGameState({\n  name: gmaeState.name,\n  startGame: true,\n  currentScreen : info,\n  highScore : gmaeState.highScore\n})\n  }\n\n  const ButtonHolderClickHandler = (info)=> {\n    \n    setGameState({\n      name: gmaeState.name,\n      startGame: true,\n      currentScreen : 'MainScreen',\n      highScore : info\n    })\n  }\n\n\n  const HighScoreListClickHandler = ()=>{\n    setGameState({\n      name: gmaeState.name,\n      startGame: gmaeState.startGame,\n      currentScreen : 'MainScreen',\n      highScore : gmaeState.highScore\n    })\n  }\n\n\n\nconst saveHighScoreHandler = useCallback(  ()=>{\n  // let secret =process.env.REACT_APP_SECRET\n  let date= new Date()\nlet fulldate = ` Date: ${date.getDay()}/${date.getMonth()}/${date.getFullYear()} Time: ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`\n  const scoreToSave ={\n    name : gmaeState.name,\n    score : gmaeState.highScore,\n    date : fulldate\n  }\nfetch('https://myrandombox-6a49f-default-rtdb.europe-west1.firebasedatabase.app/highScoreList.json?auth='+process.env.REACT_APP_SECRET,{\n  method : 'POST',\n  body : JSON.stringify(scoreToSave),\n  headers :{\n    'Content-Type' :'application/json'\n  }\n})\n},[gmaeState.highScore, gmaeState.name])\n\n\nuseEffect(()=>{\n  if (gmaeState.highScore > 0){\n    saveHighScoreHandler()\n  }\n \n},[gmaeState.highScore, saveHighScoreHandler,gmaeState.startGame])\n  \n\n\n\n let load =  ''\n\n  switch (gmaeState.currentScreen) {\n  case 'MainScreen':\n    load = <MainScreen getInfo={getInfo =>{MainScreenClickedHandler(getInfo)}} username={gmaeState.name} score={gmaeState.highScore}/>\n    break\n\n    case 'RegisterHolder':\n      load = <RegisterHolder getInfo={(info)=>getinfoHandler(info)} name={gmaeState.name}/>\n     break\n\n     case 'ButtonHolder':\n      load = <ButtonsHolderName username={gmaeState.name}  getInfo={getInfo =>{ButtonHolderClickHandler(getInfo)}} score={gmaeState.highScore} />\n     break\n\n    case \"HighScoreList\":\n\n    load = <HighScoreList getInfo={HighScoreListClickHandler}/>\n\n\nbreak\ndefault:\n\n    load = (<div>\n  <h1>ERROR</h1>\n    </div>\n  \n)\n}\n   \n\n  return (\n    <div className=\"App\">\n  {/* <ButtonsHolderName/> */}\n  \n    {load}\n\n{/* {gmaeState.startGame? \n<ButtonsHolderName username={gmaeState.name}/> :  \n<RegisterHolder getInfo={(info)=>getinfoHandler(info)}/> } */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}